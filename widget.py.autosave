# This Python file uses the following encoding: utf-8
import os
from pathlib import Path
import sys

from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QTextEdit, QMessageBox, QVBoxLayout
from PyQt5.QtCore import QFile
from PyQt5 import uic

#from PyQt5.QtUiTools import QUiLoader


class Widget(QWidget):
    def __init__(self, parent=None):
        # default display
        super().__init__(parent)
        uic.loadUi('form.ui', self)
        RSA_Items = ["(c,n,e)", "(c,p,q,e)", "(c,n,e,{p or q})", "(c,n,d)", "Hasted Broadcast Attack", "Small Exponent(\"e\") Attack", "Chinese Remainder Theorem", "Fermat Factorization"]
        XOR_Items = ["Single Key", "Repeating Key"]
        self.listOfParams = []
        self.RSA_Combo.addItems(RSA_Items)
        self.XOR_Combo.addItems(XOR_Items)
#        aboutText = "ZCrypt in PyQt5.\nConsole version coded by stoic3r, GUI by @thatloststudent"
#        self.aboutLabelXOR = QLabel(self.XOR_Widget)
#        self.aboutLabelXOR.setText(aboutText)
#        self.aboutLabelRSA = QLabel(self.RSA_Widget)
#        self.aboutLabelRSA.setText(aboutText)
#        self.show()

#        self.RSA_Combo.currentIndexChanged.connect(self.workOnRSA)
#        self.XOR_Combo.currentIndexChanged.connect(self.workOnXOR)
        self.NextRSA.clicked.connect(self.submitRSA)
        self.NextXOR.clicked.connect(self.submitXOR)

    def workOnRSA(self):
        # show only the relevant fields
        self.aboutLabelRSA.setParent(None)
        currentIndex = self.RSA_Combo.currentIndex()
        # huge-ass elif statement about how everything should behave
        pass

    def workOnXOR(self):
        print("In WorkOnXOR")
        try:
            self.aboutLabelXOR.setParent(None)
            currentIndex = self.XOR_Combo.currentIndex()
            if currentIndex == 0:
                self.addWidgetsOnIndex(["Ciphertext (in hex)"], self.XOR_Widget)
            elif currentIndex == 1:
                pass
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Something went wrong!")
                msg.setText("None of the options were picked")
        except Exception as e:
            print(e)

    def addWidgetsOnIndex(self, widgets, parent):
        # Expecting QLabels
        print("In addWidgetsOnIndex")
        try:
            self.listOfParams = []
            print(widgets, parent)
            layout = QVBoxLayout(parent)
            for i in widgets:
                label = QLabel(i)
#                input = QTextEdit(self)
                layout.addWidget(label)
                self.listOfParams.append(input)
            self.setLayout(layout)
        except Exception as e:
            print(e)

    def submitRSA(self):
       pass

    def submitXOR(self):
       try:
           currentIndex = self.XOR_Combo.currentIndex()
           if currentIndex == 0:
               input = self.listOfParams[0].toPlainText()
               from XOR.bruteforce import bruteforce
               result = QLabel(self.XOR_Widget)
               result.setText("Result:\n"+str(bruteforce(input)))
           else:
                print("Not implemented")
       except Exception as e:
           msg = QMessageBox()
           msg.setWindowTitle("Error")
           msg.setText(str(e))


if __name__ == "__main__":
    app = QApplication(sys.argv)
    widget = Widget()
    widget.show()
    sys.exit(app.exec_())
